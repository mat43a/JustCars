
using System.Reflection.Metadata;
using System.Runtime.CompilerServices;

struct Cars 
{
    public int x;
    public int y;   
    public ConsoleColor color;
    public Char c;
}

class Program
{
    private static char n;
    private static readonly char X;

    public static char N { get; private set; }

    static void PrintOnPosition (int x, int y, char c, ConsoleColor color =ConsoleColor.Gray )
    {
        Console.SetCursorPosition ( x, y );
        Console.ForegroundColor = color;
        Console.Write(c);
    }
    static void Main()
    {
        int playfildWidth = 5;
        Console.BufferHeight = Console.WindowHeight = 20;
        Console.BufferWidth = Console.WindowWidth = 30;
        Cars userCars = new Cars();
        userCars.x = 2;
        userCars.y = Console.WindowHeight;
        userCars.c = "@";
        userCars.color = ConsoleColor.Yellow;

        while (true)
        {
            if (Console.KeyAvailable)
            {
                ConsoleKeyInfo pressedKey = Console.ReadKey(true);
                if (pressedKey.Key == ConsoleKey.LeftArrow)
                {
                    if (userCars.x - 1 >= 0)
                    {
                        userCars.x = userCars.x - 1;
                    }
                    else if (pressedKey.Key == ConsoleKey.RightArrow)
                    {
                        if (userCars.x + 1 < playfildWidth)
                        {
                            userCars.x = userCars.x + 1;
                        }
                        
                    }
                    
                }
            }
            Console.Clear();
            Thread.Sleep (100);
            PrintOnPosition(userCars.x,userCars.y,userCars.c, userCars.color);  
           
            
        }
    }
}
